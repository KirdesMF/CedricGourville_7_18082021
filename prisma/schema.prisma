// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  USER
  ADMIN
}

enum Department {
  DIRECTION
  TECH
  COM
  SOCIAL
  VISITOR
}

model User {
  id             Int       @id @default(autoincrement())
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  lastConnection DateTime? @db.DateTime

  email      String     @unique
  username   String     @unique @db.VarChar(45)
  password   String     @db.VarChar(255)
  department Department @default(VISITOR)
  firstName  String?    @db.VarChar(45)
  lastName   String?    @db.VarChar(45)
  bio        String?    @db.TinyText
  avatar     String?    @db.VarChar(255)
  role       Role       @default(USER)
  comments   Comment[]
  posts      Post[]
  rating     Rating[]
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title    String    @db.VarChar(255)
  content  String
  media    String?   @db.VarChar(255)
  comments Comment[]
  rating   Rating[]

  user   User @relation(fields: [userId], references: [id])
  userId Int
}

enum Reaction {
  LIKE
  FUNNY
  ANGRY
  AWESOME
}

model Rating {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  reaction  Reaction?
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  post      Post      @relation(fields: [postId], references: [id])
  postId    Int
}

model Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  image     String?  @db.VarChar(255)
  content   String   @db.LongText

  user   User? @relation(fields: [userId], references: [id])
  userId Int?
  post   Post? @relation(references: [id], fields: [postId])
  postId Int?
}
